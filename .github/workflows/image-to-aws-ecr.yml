name: Terraform, ECR, and Multi-Image Deployment

on:
  push:
    branches:
      - main  # Adjust to your preferred branch

jobs:

  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push event finder docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.ECR_REG }}
        run: |
          cd event_finder
          docker build -t $REGISTRY/event-finder:latest .
          docker push $REGISTRY//event-finder:latest .

      - name: Build, tag, and push emailer docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.ECR_REG }}
        run: |
          cd emailer
          docker build -t $REGISTRY/emailer:latest .
          docker push $REGISTRY//emailer:latest .

  # Step 3: Terraform Apply to Deploy Remaining Infrastructure
  deploy-infra:
    runs-on: ubuntu-latest
    needs: build-and-push  # Depends on the "build-and-push" job

    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Terraform Init (Deploy Infrastructure)
        run: |
          cd terraform && terraform fmt
          terraform init
          terraform apply --auto-approve

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_REGION: ${{ secrets.AWS_REGION }}

